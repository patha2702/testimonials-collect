// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  avatar    String?
  planId    Int       @default(1)
  plan      Plan      @relation(fields: [planId], references: [id])
  projects  Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id            String        @id @default(cuid())
  name          String
  liveUrl       String
  logo          String
  header        String
  customMessage String
  questions     Question[]
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  testimonials  Testimonial[]
  watchTime     Int           @default(0)
}

model Question {
  id        Int     @id @default(autoincrement())
  question  String
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Testimonial {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  text      String?
  videoUrl  String?
  rating    Float
  loved     Boolean  @default(false)
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createAt  DateTime @default(now())
}

model Plan {
  id                        Int      @id @default(autoincrement())
  name                      String   @unique
  price                     Int
  maxProjects               Int
  maxTestimonialsPerProject Int
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  users                     User[]
}
